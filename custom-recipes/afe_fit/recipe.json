{
    "meta": {
        "label": "Auto feature aggregation - Fit",
        "description": "",
        "author": "Dataiku (Du Phan)",
        "tags": ["Machine Learning", "Feature engineering", "Time series"]
    },
    "kind": "PYTHON",
    "inputRoles": [
        {
            "name": "input_dataset",
            "label": "Table to apply feature aggregation",
            "description": "Input dataset",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],
    "outputRoles": [
        {
            "name": "output_folder",
            "label": "Model folder",
            "description": "Folder that stocks model parameters and metadata",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": false,
            "acceptsManagedFolder": true
        }
    ],
    "params": [
        {
            "name": "sep4",
            "label": "Time settings",
            "type": "SEPARATOR"
        },
        {
            "name": "time_reference_type",
            "label": "Time reference",
            "type": "SELECT",
            "selectChoices": [
                {
                    "value": "fixed_timestamp",
                    "label": "Fixed timestamp"
                },
                {
                    "value": "rolling_window",
                    "label": "Rolling window"
                }
            ],
            "mandatory": true,
            "defaultValue": "fixed_timestamp"
        },
        {
            "name": "timestamp_column",
            "label": "Timestamp column",
            "description": "Column that defines the temporal dimension",
            "type": "COLUMN",
            "columnRole": "input_dataset"
        },
        {
            "name": "sep0",
            "label": "Aggregation keys",
            "type": "SEPARATOR"
        },
        {
            "name": "aggregation_keys",
            "label": "Aggregation keys",
            "type": "COLUMNS",
            "columnRole": "input_dataset"
        },
        {
            "name": "sep1",
            "label": "Input features",
            "type": "SEPARATOR"
        },
        {
            "name": "input_features_definition",
            "label": "Input features definition",
            "type": "SELECT",
            "selectChoices": [
                { "value": "manual", "label": "Manual"},
                { "value": "auto", "label": "Automatic"}
            ],
            "defaultValue": "manual",
            "description": ""
        },
        {
            "name": "ratio_threshold",
            "label": "Ratio percentage threshold",
            "description": "If the percentage ratio between the number of unique values and the length of dataset is greater than this, the column will be considered as numerical and vice versa.",
            "type": "DOUBLE",
            "visibilityCondition": "model.input_features_definition == 'auto'"
        },
        {
            "name": "ignored_columns",
            "label": "Columns to ignore",
            "description":"Already included the subject columns and timestamp column",
            "type": "COLUMNS",
            "columnRole": "input_dataset",
            "visibilityCondition": "model.input_features_definition == 'auto'"
        },
        {
            "name": "numerical_columns",
            "label": "Numerical columns",
            "type": "COLUMNS",
            "columnRole": "input_dataset",
            "visibilityCondition": "model.input_features_definition == 'manual' && !model.auto_type_inference"
        },
        {
            "name": "categorical_columns",
            "label": "Categorical columns",
            "type": "COLUMNS",
            "columnRole": "input_dataset",
            "visibilityCondition": "model.input_features_definition == 'manual' && !model.auto_type_inference"
        },
        {
            "name": "sep2",
            "label": "Aggregation windows",
            "type": "SEPARATOR"
        },
        {
            "name": "use_temporal_window",
            "label": "Specify temporal windows",
            "description": "If no temporal window is defined, aggregations are computed on all history .",
            "type": "BOOLEAN"
        },
        {
            "name": "windows_widths_day",
            "label": " - window width in days",
            "description": "Optional. Use comma-separated values for several windows",
            "type": "STRING",
            "visibilityCondition": "model.use_temporal_window && model.time_reference_type == 'fixed_timestamp'"
        },
        {
            "name": "windows_widths_weeks",
            "label": " - window width in weeks",
            "description": "Optional. Use comma-separated values for several windows",
            "type": "STRING",
            "visibilityCondition": "model.use_temporal_window && model.time_reference_type == 'fixed_timestamp'"
        },
        {
            "name": "windows_widths_month",
            "label": " - window width in months",
            "description": "Optional. Use comma-separated values for several windows",
            "type": "STRING",
            "visibilityCondition": "model.use_temporal_window && model.time_reference_type == 'fixed_timestamp'"
        },
        {
            "name": "windows_widths_year",
            "label": " - window width in years",
            "description": "Optional. Use comma-separated values for several windows",
            "type": "STRING",
            "visibilityCondition": "model.use_temporal_window && model.time_reference_type == 'fixed_timestamp'"
        },
        {
            "name": "windows_widths_row",
            "label": " - window width in rows",
            "description": "Optional. Use comma-separated values for several windows",
            "type": "TEXTAREA",
            "visibilityCondition": "model.use_temporal_window && model.time_reference_type=='rolling_window'"
        },
        {
            "name": "num_windows_per_type",
            "label": "Windows of each type",
            "type": "INT",
            "description":"Ex: use windows of 1 week and set this to 3 to compute aggregates for each of the past 3 weeks",
            "defaultValue": 1,
            "mandatory": false,
            "visibilityCondition": "model.use_temporal_window"
        },
        {
            "name": "whole_history_window_enabled",
            "label": " - add a window with all history",
            "type": "BOOLEAN",
            "visibilityCondition": "model.use_temporal_window"
        },
        {
            "name": "sep3",
            "label": "Advanced configuration",
            "type": "SEPARATOR"
        },
        {
            "name": "population_definition_method",
            "label": "Populations",
            "type": "SELECT",
            "selectChoices": [
                    { "value": "whole_dataset", "label": "Whole dataset"},
                    { "value": "manual", "label": "Manual"},
                    { "value": "brute_force", "label": "Try all comninations"}
            ],
            "defaultValue": "manual"
        },
        {
            "name": "num_populations",
            "label": "Number of populations",
            "description": "Maximum 5 populations.",
            "type": "INT",
            "visibilityCondition": "model.population_definition_method == 'manual'"
        },

        {
            "name": "manual_populations_dict_11",
            "label": "Population 1",
            "description": "Precise the columns and theirs corresponding value(s) for the population",
            "type": "MAP",
            "visibilityCondition": "model.population_definition_method == 'manual' && model.num_populations >= 1"
        },
        {
            "name": "manual_populations_dict_12",
            "label": "Population 2",
            "description": "Precise the columns and theirs corresponding value(s) for the population",
            "type": "MAP",
            "visibilityCondition": "model.population_definition_method == 'manual' && model.num_populations >= 2"
        },
        {
            "name": "manual_populations_dict_13",
            "label": "Population 3",
            "description": "Precise the columns and theirs corresponding value(s) for the population",
            "type": "MAP",
            "visibilityCondition": "model.population_definition_method == 'manual' && model.num_populations >= 3"
        },
        {
            "name": "manual_populations_dict_14",
            "label": "Population 4",
            "description": "Precise the columns and theirs corresponding value(s) for the population",
            "type": "MAP",
            "visibilityCondition": "model.population_definition_method == 'manual' && model.num_populations >= 4"
        },
        {
            "name": "manual_populations_dict_15",
            "label": "Population 5",
            "description": "Precise the columns and theirs corresponding value(s) for the population",
            "type": "MAP",
            "visibilityCondition": "model.population_definition_method == 'manual' && model.num_populations >= 5"
        },
        {
            "name": "brute_force_populations_dict",
            "label": "Condition dictionary",
            "description": "Precise the columns and theirs corresponding value(s) for the populations, each value groups need to be in a list.",
            "type": "MAP",
            "visibilityCondition": "model.population_definition_method == 'brute_force'"
        }
    ]

}
